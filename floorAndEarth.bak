#lang racket
;Suelo: El suelo de la escena, en donde se paran los jugadores y enemigos.}

;createFloor: parámetros (X Y)
;desc: Función constructora de floor
;dom:entero X entero
;X: Coordenada en X (nivel en el suelo)
;Y: Coordenada en Y (altura)
;rec: Floor. (X Y)
(define (createFloor X Y)
  (if (and (intPositive? X)
           (intPositive? Y))
      (list X Y)
      null)
  )
;floor?: parámetros (algo)
;desc: Función de pertenencia de floor
;dom: cualquier tipo de dato
;rec: Booleano.
(define (floor? F)
  (if (and
       (list? F)
       (intPositive? (get F 0))
       (intPositive? (get F 1))
       )
      #t
      #f
      )
  )
;getEarthX: parámetros (earth Nfloor)
;desc: Función selectora de earth. Nos entrega la coordenada X del floor número algo.
;dom: earth X entero
;earth: conjunto de floor
;Nfloor: Número de floor dentro de earth en donde queremos sacar su coordenada en X.
;rec: entero, que representa la coordenada en X
(define (getEarthX earth Nfloor)
  (if (and
       (intPositive? Nfloor)
       (<= Nfloor (length earth))
       (earth? earth)
       )
      (get (get earth Nfloor) 0)
      -1)
  )

;getEarthY: parámetros (earth Nfloor)
;desc: Función selectora de earth. Nos entrega la coordenada X del floor número algo.
;dom: earth X entero
;earth: conjunto de floor
;Nfloor: Número de floor dentro de earth en donde queremos sacar su coordenada en Y.
;rec: entero, que representa la coordenada en Y.
(define (getEarthY earth Nfloor)
  (if (and
       (intPositive? Nfloor)
       (<= Nfloor (length earth))
       (earth? earth)
       )
      (get (get earth Nfloor) 1)
      -1
      )
  )
(provide (all-defined-out))